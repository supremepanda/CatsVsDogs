{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport uploadAreaActions, { uploadAreaTypes } from \"./actions\";\nconst BASE_URL = \"http://127.0.0.1:5000\";\n\nasync function callPredictImage(image) {\n  const {\n    type\n  } = await fetch(`${BASE_URL}/api/predict-image`, {\n    method: 'POST',\n    body: image\n  }).then(res => res.json());\n  return type;\n}\n\nexport function* uploadImageSaga({\n  image\n}) {\n  const form = new FormData();\n  form.append(\"image\", image);\n  const imageType = yield call(callPredictImage, form);\n  yield put(uploadAreaActions.uploadImageSuccess(imageType));\n}\nexport default function* uploadAreaSaga() {\n  yield takeLatest(uploadAreaTypes.UPLOAD_IMAGE, uploadImageSaga);\n}","map":{"version":3,"sources":["/Users/mp-school/Desktop/CatsVsDogs/react/src/containers/UploadArea/saga.js"],"names":["takeLatest","call","put","uploadAreaActions","uploadAreaTypes","BASE_URL","callPredictImage","image","type","fetch","method","body","then","res","json","uploadImageSaga","form","FormData","append","imageType","uploadImageSuccess","uploadAreaSaga","UPLOAD_IMAGE"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,iBAAP,IAA4BC,eAA5B,QAAmD,WAAnD;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;;AAEA,eAAeC,gBAAf,CAAgCC,KAAhC,EAAuC;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMC,KAAK,CAAE,GAAEJ,QAAS,oBAAb,EAAkC;AAC7DK,IAAAA,MAAM,EAAE,MADqD;AAE7DC,IAAAA,IAAI,EAAEJ;AAFuD,GAAlC,CAAL,CAGlBK,IAHkB,CAGbC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAHM,CAAvB;AAKA,SAAON,IAAP;AACA;;AAED,OAAO,UAAUO,eAAV,CAA0B;AAAER,EAAAA;AAAF,CAA1B,EAAqC;AAC3C,QAAMS,IAAI,GAAG,IAAIC,QAAJ,EAAb;AACAD,EAAAA,IAAI,CAACE,MAAL,CAAY,OAAZ,EAAqBX,KAArB;AAEA,QAAMY,SAAS,GAAG,MAAMlB,IAAI,CAACK,gBAAD,EAAmBU,IAAnB,CAA5B;AACA,QAAMd,GAAG,CAACC,iBAAiB,CAACiB,kBAAlB,CAAqCD,SAArC,CAAD,CAAT;AACA;AAED,eAAe,UAAUE,cAAV,GAA2B;AACzC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,YAAjB,EAA+BP,eAA/B,CAAhB;AACA","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\"\nimport uploadAreaActions, { uploadAreaTypes } from \"./actions\"\n\nconst BASE_URL = \"http://127.0.0.1:5000\"\n\nasync function callPredictImage(image) {\n\tconst { type } = await fetch(`${BASE_URL}/api/predict-image`, {\n\t\tmethod: 'POST',\n\t\tbody: image\n\t  }).then(res => res.json())\n\n\treturn type\n}\n\nexport function* uploadImageSaga({ image }) {\n\tconst form = new FormData()\n\tform.append(\"image\", image)\n\n\tconst imageType = yield call(callPredictImage, form)\n\tyield put(uploadAreaActions.uploadImageSuccess(imageType))\n}\n\nexport default function* uploadAreaSaga() {\n\tyield takeLatest(uploadAreaTypes.UPLOAD_IMAGE, uploadImageSaga)\n}"]},"metadata":{},"sourceType":"module"}